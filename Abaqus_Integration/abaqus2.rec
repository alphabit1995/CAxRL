# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(modelType=STANDARD_EXPLICIT, name='GUI_Model')
mdb.models['GUI_Model'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['GUI_Model'].sketches['__profile__'].Arc3Points(point1=(-35.0, 0.0), 
    point2=(35.0, 0.0), point3=(0.0, 5.0))
mdb.models['GUI_Model'].sketches['__profile__'].Line(point1=(10.0, 0.0), 
    point2=(10.0, 4.59935794374906))
mdb.models['GUI_Model'].sketches['__profile__'].Line(point1=(-5.0, 
    4.89995996796802), point2=(-5.0, 0.0))
mdb.models['GUI_Model'].Part(dimensionality=THREE_D, name='Roof', type=
    DEFORMABLE_BODY)
mdb.models['GUI_Model'].parts['Roof'].BaseShellExtrude(depth=35.0, sketch=
    mdb.models['GUI_Model'].sketches['__profile__'])
del mdb.models['GUI_Model'].sketches['__profile__']
mdb.models['GUI_Model'].Material(name='Steel')
mdb.models['GUI_Model'].materials['Steel'].Elastic(table=((210000.0, 0.3), ))
mdb.models['GUI_Model'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Steel', name='Roof_Section', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1.0, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['GUI_Model'].parts['Roof'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['GUI_Model'].parts['Roof'].faces.getSequenceFromMask(
    mask=('[#1f ]', ), )), sectionName='Roof_Section', thicknessAssignment=
    FROM_SECTION)
mdb.models['GUI_Model'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['GUI_Model'].rootAssembly.Instance(dependent=ON, name='Roof-1', 
    part=mdb.models['GUI_Model'].parts['Roof'])
mdb.models['GUI_Model'].StaticStep(initialInc=0.1, name='Step-1', noStop=OFF, 
    previous='Initial', timeIncrementationMethod=FIXED)
mdb.models['GUI_Model'].parts['Roof'].Set(edges=
    [mdb.models['GUI_Model'].parts['Roof'].edges.getSequenceFromMask(mask=(
    '[#5182 ]', ), ), 
    mdb.models['GUI_Model'].parts['Roof'].edges.getSequenceFromMask(mask=(
    '[#2628 ]', ), ), 
    mdb.models['GUI_Model'].parts['Roof'].edges.getSequenceFromMask(mask=(
    '[#44 ]', ), )], faces=
    [mdb.models['GUI_Model'].parts['Roof'].faces.getSequenceFromMask(mask=(
    '[#8 ]', ), ), 
    mdb.models['GUI_Model'].parts['Roof'].faces.getSequenceFromMask(mask=(
    '[#10 ]', ), )], name='Support_Set')
mdb.models['GUI_Model'].parts['Roof'].Set(faces=
    [mdb.models['GUI_Model'].parts['Roof'].faces.getSequenceFromMask(mask=(
    '[#8 ]', ), ), 
    mdb.models['GUI_Model'].parts['Roof'].faces.getSequenceFromMask(mask=(
    '[#10 ]', ), )], name='Temp_Support_Set')
mdb.models['GUI_Model'].parts['Roof'].Set(faces=
    mdb.models['GUI_Model'].parts['Roof'].faces, name='All_Faces_Set')
mdb.models['GUI_Model'].parts['Roof'].SetByBoolean(name='Pressure_Set', 
    operation=DIFFERENCE, sets=(
    mdb.models['GUI_Model'].parts['Roof'].sets['All_Faces_Set'], 
    mdb.models['GUI_Model'].parts['Roof'].sets['Temp_Support_Set']))
del mdb.models['GUI_Model'].parts['Roof'].sets['Temp_Support_Set']
mdb.models['GUI_Model'].EncastreBC(createStepName='Step-1', localCsys=None, 
    name='BC-1', region=
    mdb.models['GUI_Model'].rootAssembly.instances['Roof-1'].sets['Support_Set'])
mdb.models['GUI_Model'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=200.0, name='Load-1', region=
    Region(
    side2Faces=mdb.models['GUI_Model'].rootAssembly.instances['Roof-1'].faces.getSequenceFromMask(
    mask=('[#7 ]', ), )))
mdb.models['GUI_Model'].parts['Roof'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.0)
mdb.models['GUI_Model'].parts['Roof'].generateMesh()
mdb.models['GUI_Model'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='GUI_Model', modelPrint=OFF, name=
    'GUI', nodalOutputPrecision=SINGLE, queue=None, resultsFormat=ODB, scratch=
    '', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['GUI'].submit(consistencyChecking=OFF)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(-35.0, 0.0), 
    point2=(35.0, 0.0), point3=(0.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-30.0, 
    1.34661099511595), point2=(-30.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 
    4.59935794377111), point2=(-10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 
    1.34661099511595), point2=(30.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 0.0), point2=(
    20.0, 3.38962679263204))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 0.0), point2=(
    15.0, 4.09673645999283))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 5.0), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, 
    2.47448713915901), point2=(-25.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 
    2.47448713915901), point2=(25.0, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Roof', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Roof'].BaseShellExtrude(depth=69.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Steel')
mdb.models['Model-1'].materials['Steel'].Elastic(table=((210000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Steel', name='Roof_Section', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1.0, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].parts['Roof'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(mask=(
    '[#1ffff ]', ), )), sectionName='Roof_Section', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Roof-1', part=
    mdb.models['Model-1'].parts['Roof'])
mdb.models['Model-1'].StaticStep(initialInc=0.1, name='Step-1', noStop=OFF, 
    previous='Initial', timeIncrementationMethod=FIXED)
mdb.models['Model-1'].parts['Roof'].Set(edges=
    [mdb.models['Model-1'].parts['Roof'].edges.getSequenceFromMask((
    '[#26292122 #51251 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].edges.getSequenceFromMask((
    '[#99444a48 #24924 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].edges.getSequenceFromMask(('[#1004 ]', 
    ), )], faces=
    [mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#200 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#10000 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#400 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#8000 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#800 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#4000 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#1000 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#2000 ]', ), )], name='Support_Set')
mdb.models['Model-1'].parts['Roof'].Set(faces=
    [mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#200 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#10000 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#400 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#8000 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#800 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#4000 ]', ), ), 
    mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask(('[#1000 ]', 
    ), ), mdb.models['Model-1'].parts['Roof'].faces.getSequenceFromMask((
    '[#2000 ]', ), )], name='Temp_Support_Set')
mdb.models['Model-1'].parts['Roof'].Set(faces=
    mdb.models['Model-1'].parts['Roof'].faces, name='All_Faces_Set')
mdb.models['Model-1'].parts['Roof'].SetByBoolean(name='Pressure_Set', 
    operation=DIFFERENCE, sets=(
    mdb.models['Model-1'].parts['Roof'].sets['All_Faces_Set'], 
    mdb.models['Model-1'].parts['Roof'].sets['Temp_Support_Set']))
del mdb.models['Model-1'].parts['Roof'].sets['Temp_Support_Set']
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=
    mdb.models['Model-1'].rootAssembly.instances['Roof-1'].sets['Support_Set'])
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=200.0, name='Load-1', region=
    Region(
    side2Faces=mdb.models['Model-1'].rootAssembly.instances['Roof-1'].faces.getSequenceFromMask(
    mask=('[#1ff ]', ), )))
mdb.models['Model-1'].parts['Roof'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.0)
mdb.models['Model-1'].parts['Roof'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, name=
    'Job-1', nodalOutputPrecision=SINGLE, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['GUI']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'PNNB754355', 'handle': 0, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\basan\\Documents\\Thesis\\Code\\CAxRL\\Abaqus_Integration\\GUI.odb', 
    'jobName': 'GUI'})
mdb.jobs['GUI']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'PNNB754355', 'handle': 8236, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'GUI'})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'GUI', 'memory': 25.0})
mdb.jobs['GUI']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 65289.0, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(MINIMUM_MEMORY, {'minimum_memory': 17.0, 
    'phase': STANDARD_PHASE, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.1, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.3, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.4, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 4, 'stepTime': 0.4, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.5, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 5, 'stepTime': 0.5, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.6, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 6, 'stepTime': 0.6, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.7, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 7, 'stepTime': 0.7, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.8, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.8, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 0.9, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.9, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'GUI', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['GUI']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'GUI'})
mdb.jobs['GUI']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'GUI'})
mdb.jobs['GUI']._Message(JOB_COMPLETED, {'time': 'Fri Nov 24 09:33:39 2023', 
    'jobName': 'GUI'})
